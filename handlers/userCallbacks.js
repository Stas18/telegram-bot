module.exports = {
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö callback-–æ–≤.
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –º–æ–¥—É–ª—è.
   * 
   * @param {Object} deps - –û–±—ä–µ–∫—Ç —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –º–æ–¥—É–ª—è
   * @param {Object} deps.bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ Telegram API
   * @param {Object} deps.logger - –õ–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–æ–±—ã—Ç–∏–π
   * @param {Object} deps.subscriptionsManager - –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–ø–∏—Å–æ–∫
   * @param {Object} deps.menuCreator - –ú–æ–¥—É–ª—å —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é
   * @param {Array<string|number>} deps.ADMIN_IDS - –ú–∞—Å—Å–∏–≤ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
   * @returns {void}
   */
  init: function (deps) {
    Object.assign(this, deps);
  },

  /**
   * –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤.
   * –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏.
   * 
   * @param {Object} query - –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞ –æ—Ç Telegram Bot API
   * @param {string} query.id - –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä callback-–∑–∞–ø—Ä–æ—Å–∞
   * @param {Object} query.message - –°–æ–æ–±—â–µ–Ω–∏–µ, —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å callback
   * @param {number|string} query.message.chat.id - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
   * @param {number} query.message.message_id - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
   * @param {string} query.data - –î–∞–Ω–Ω—ã–µ callback-–∫–Ω–æ–ø–∫–∏
   * @returns {Promise<void>}
   */
  handle: async function (query) {
    const chatId = query.message.chat.id;

    try {
      // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ callback
      await this.bot.answerCallbackQuery(query.id, {
        text: "...",
        show_alert: false,
      });

      // –°–ª–æ–≤–∞—Ä—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ callback-–æ–≤
      const userHandlers = {
        subscribe: () => this.handleSubscribe(query),
        unsubscribe: () => this.handleUnsubscribe(query),
        back_to_main: () => this.handleBackToMain(query),
        reload_env: () => this.handleReloadEnv(query),
      };

      // –í—ã–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      if (userHandlers[query.data]) {
        await userHandlers[query.data]();
      }
    } catch (error) {
      this.logger.error(error, `–æ–±—Ä–∞—Ç–Ω—ã–π –≤—ã–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${query.data} –æ—Ç ${chatId}`);
      await this.bot.answerCallbackQuery(query.id, {
        text: "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞",
        show_alert: false,
      });
    }
  },

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.
   * –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É.
   * 
   * @param {Object} query - –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞
   * @returns {Promise<void>}
   */
  handleSubscribe: async function (query) {
    const chatId = query.message.chat.id;
    const subscriptions = this.subscriptionsManager.load();

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–æ–¥–ø–∏—Å—á–∏–∫–∏
    subscriptions.add(chatId.toString());
    this.subscriptionsManager.save(subscriptions);

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await this.bot.answerCallbackQuery(query.id, {
      text: "‚úÖ –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å!",
    });
    await this.bot.editMessageText(
      "üéâ –¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤—Å—Ç—Ä–µ—á–∞—Ö!",
      {
        chat_id: chatId,
        message_id: query.message.message_id,
        reply_markup: {
          inline_keyboard: [
            [{ text: "üîô –ù–∞–∑–∞–¥", callback_data: "back_to_main" }],
          ],
        },
      }
    );
  },

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
   * –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç –æ—Ç–ø–∏—Å–∫—É.
   * 
   * @param {Object} query - –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞
   * @returns {Promise<void>}
   */
  handleUnsubscribe: async function (query) {
    const chatId = query.message.chat.id;
    const subscriptions = this.subscriptionsManager.load();

    // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    subscriptions.delete(chatId.toString());
    this.subscriptionsManager.save(subscriptions);

    // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await this.bot.answerCallbackQuery(query.id, { text: "‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å" });
    await this.bot.editMessageText(
      "–¢–µ–ø–µ—Ä—å —Ç—ã –Ω–µ –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üò¢",
      {
        chat_id: chatId,
        message_id: query.message.message_id,
        reply_markup: {
          inline_keyboard: [
            [{ text: "üîô –ù–∞–∑–∞–¥", callback_data: "back_to_main" }],
          ],
        },
      }
    );
  },

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–∑–≤—Ä–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
   * –£–¥–∞–ª—è–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
   * 
   * @param {Object} query - –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞
   * @returns {Promise<void>}
   */
  handleBackToMain: async function (query) {
    const chatId = query.message.chat.id;
    const isAdmin = this.ADMIN_IDS.includes(chatId.toString());

    // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await this.bot.deleteMessage(chatId, query.message.message_id);
    await this.bot.sendMessage(
      chatId,
      "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
      this.menuCreator.createMainMenu(isAdmin)
    );
  },

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞.
   * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ ADMIN_IDS –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
   * 
   * @param {Object} query - –û–±—ä–µ–∫—Ç callback-–∑–∞–ø—Ä–æ—Å–∞
   * @returns {Promise<void>}
   */
  handleReloadEnv: async function (query) {
    // –û—á–∏—â–∞–µ–º –∫—ç—à –º–æ–¥—É–ª—è dotenv –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    delete require.cache[require.resolve("dotenv")];
    require("dotenv").config();

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    this.ADMIN_IDS = process.env.ADMIN_IDS.split(",");

    await this.bot.answerCallbackQuery(query.id, {
      text: "‚úÖ .env –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω!",
    });
  },
};
