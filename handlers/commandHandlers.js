module.exports = {
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–æ–¥—É–ª—å –∫–æ–º–∞–Ω–¥, —Å–æ—Ö—Ä–∞–Ω—è—è –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏.
   *
   * @param {Object} deps - –û–±—ä–µ–∫—Ç —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ –º–æ–¥—É–ª—è
   * @param {Array<string|number>} deps.ADMIN_IDS - –ú–∞—Å—Å–∏–≤ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
   * @param {Object} deps.bot - –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ Telegram API
   * @param {Object} deps.logger - –õ–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–æ–±—ã—Ç–∏–π
   * @param {Object} deps.menuCreator - –ú–æ–¥—É–ª—å —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é
   * @param {Object} deps.subscriptionsManager - –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–ø–∏—Å–æ–∫
   * @param {Object} deps.coreFunctions - –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   * @param {Object} deps.ANIMATION_URLS - URL –∞–Ω–∏–º–∞—Ü–∏–π –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
   * @returns {void}
   */
  init: (deps) => {
    Object.assign(this, deps);
  },

  /**
   * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start - –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é.
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é GIF-–∞–Ω–∏–º–∞—Ü–∏—é –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
   * –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ –º–µ–Ω—é —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏.
   *
   * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram Bot API
   * @param {number|string} msg.chat.id - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
   * @param {Object} msg.from - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
   * @param {string} msg.from.first_name - –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns {Promise<void>}
   */
  start: async (msg) => {
    const chatId = msg.chat.id;
    const isAdmin = this.ADMIN_IDS.includes(chatId.toString());

    const welcomeGifs = [
      this.ANIMATION_URLS.WELCOME,
      "https://media.giphy.com/media/l0HU20BZ6LbSEITza/giphy.gif",
      "https://media.giphy.com/media/xT5LMGupUKCHm7DdFu/giphy.gif",
      "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExZ2ptYXloNWJ1Ym9jd2l5anJreGFqazR0aXRrN3Yxb3RmcmM1NzJrdCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/Cmr1OMJ2FN0B2/giphy.gif",
      "https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExaWcxOWY5dTFibzZvdGlxNjZvMG14OGFvNng2Z29xdmQzenFqMHJ3eCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/1kJxyyCq9ZHXX0GM3a/giphy.gif",
      "https://media.giphy.com/media/v1.Y2lkPWVjZjA1ZTQ3cTN1N2F1OWVnYjlucGNnMGJhMGt0bW9wOHhiYzVrMWhhZ3N0dDlodCZlcD12MV9naWZzX3NlYXJjaCZjdD1n/7JDXBtIdOErbG/giphy.gif",
      "https://media0.giphy.com/media/v1.Y2lkPTc5MGI3NjExNHF1ZG9jMmIwd3I0ZzNjanI2bjd3a3YxMG9pNGcxZG04MHVlc25hMiZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/d7fvcrPydrDIVDRkim/giphy.gif",
      this.ANIMATION_URLS.MOVIE,
    ];

    const randomGif =
      welcomeGifs[Math.floor(Math.random() * welcomeGifs.length)];

    try {
      await this.bot.sendAnimation(chatId, randomGif, {
        caption:
          `üé¨ <b>–ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}!</b> üëã\n` +
          `–Ø ‚Äî –±–æ—Ç –∫–∏–Ω–æ-–∫–ª—É–±–∞ "–û–¥–∏—Å—Å–µ—è"`,
        parse_mode: "HTML",
      });

      await this.bot.sendMessage(
        chatId,
        "üçø <b>–ß—Ç–æ —è —É–º–µ—é:</b>\n\n" +
        "‚Ä¢ –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ –±–ª–∏–∂–∞–π—à–∏—Ö –∫–∏–Ω–æ–ø–æ–∫–∞–∑–∞—Ö\n" +
        "‚Ä¢ –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –≤—Å—Ç—Ä–µ—á–∞—Ö\n" +
        "‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞—Ç—å –æ—Ü–µ–Ω–∫–∏ —Ñ–∏–ª—å–º–æ–≤\n" +
        "‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –æ–±—Å—É–∂–¥–µ–Ω–∏–π\n\n" +
        "‚ú® <b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–ª—É–±–∞:</b>\n" +
        "‚Ä¢ –ù–∏–∫–∞–∫–∏—Ö —Å–ø–æ–π–ª–µ—Ä–æ–≤ –¥–æ –æ–±—Å—É–∂–¥–µ–Ω–∏—è\n" +
        '‚Ä¢ –ü–æ—Å–ª–µ 3-—Ö –≤—Å—Ç—Ä–µ—á ‚Äî –∑–≤–∞–Ω–∏–µ "–ö–∏–Ω–æ-–û–¥–∏—Å—Å–µ–π"\n\n' +
        '<i>"–ú—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–º–æ—Ç—Ä–∏–º –∫–∏–Ω–æ ‚Äî –º—ã –µ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–µ–º."</i>',
        {
          parse_mode: "HTML",
          ...this.menuCreator.createMainMenu(isAdmin),
        }
      );
    } catch (error) {
      this.logger.error(error, `–æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ${chatId}`);
    }
  },

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤).
   * –ö–æ–º–∞–Ω–¥–∞ —Ñ–æ—Ä–º–∞—Ç–∞: /notify –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
   *
   * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram Bot API
   * @param {Array} match - –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è
   * @param {string} match[1] - –¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
   * @returns {Promise<void>}
   */
  notify: async (msg, match) => {
    if (!this.ADMIN_IDS.includes(msg.from.id.toString())) {
      return this.bot.sendMessage(
        msg.chat.id,
        "üö´ –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"
      );
    }

    const message = match[1];
    const subscriptions = this.subscriptionsManager.load();
    let sentCount = 0;

    await this.bot.sendChatAction(msg.chat.id, "typing");

    for (const chatId of subscriptions) {
      try {
        await this.bot.sendMessage(
          chatId,
          `üì¢ <b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ:</b>\n\n${message}`,
          {
            parse_mode: "HTML",
          }
        );
        sentCount++;
      } catch (error) {
        this.logger.error(error, `–æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ${chatId}`);
      }
    }

    await this.bot.sendAnimation(msg.chat.id, this.ANIMATION_URLS.SUCCESS, {
      caption: `‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${sentCount} –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º`,
    });
  },

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤).
   *
   * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram Bot API
   * @returns {Promise<void>}
   */
  subscribers: (msg) => {
    if (!this.ADMIN_IDS.includes(msg.from.id.toString())) {
      return this.bot.sendMessage(msg.chat.id, "üö´ –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞");
    }

    const subscriptions = this.subscriptionsManager.load();
    this.bot.sendMessage(
      msg.chat.id,
      `üìä –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: ${subscriptions.size}`,
      { parse_mode: "HTML" }
    );
  },

  /**
   * –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤).
   *
   * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram Bot API
   * @returns {Promise<void>}
   */
  restart: async (msg) => {
    const chatId = msg.chat.id;

    if (!this.ADMIN_IDS.includes(chatId.toString())) {
      return this.bot.sendMessage(
        chatId,
        "üö´ –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"
      );
    }

    try {
      await this.bot.sendMessage(chatId, "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...");
      this.logger.log(`–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä ${chatId} –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–ª –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞`);
      process.exit(0);
    } catch (error) {
      this.logger.error(error, "–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞");
      await this.bot.sendMessage(chatId, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞");
    }
  },

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, —Å–ø–∏—Å–æ–∫ ADMIN_IDS.
   *
   * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram Bot API
   * @returns {Promise<void>}
   */
  checkadmin: (msg) => {
    const chatId = msg.chat.id.toString();
    const isAdmin = this.ADMIN_IDS.includes(chatId);

    const debugInfo = `
üîç <b>–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>
  
üÜî <b>–í–∞—à ID:</b> <code>${chatId}</code>
üëë <b>–°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞:</b> ${isAdmin ? "‚úÖ –î–∞" : "‚ùå –ù–µ—Ç"}
üìã <b>–°–ø–∏—Å–æ–∫ ADMIN_IDS:</b> ${this.ADMIN_IDS.map((id) => `\n- <code>${id}</code>`).join("")}

‚ÑπÔ∏è <i>–ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å "–ù–µ—Ç", –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:\n1. –í–∞—à ID –≤ —Å–ø–∏—Å–∫–µ ADMIN_IDS\n2. –ù–µ—Ç –ª–∏ –æ–ø–µ—á–∞—Ç–æ–∫\n3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏–ª–∏ –ª–∏ –±–æ—Ç –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è .env</i>
    `;

    this.bot.sendMessage(chatId, debugInfo, {
      parse_mode: "HTML",
      reply_markup: {
        inline_keyboard: [
          [{ text: "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å .env", callback_data: "reload_env" }],
        ],
      },
    });
  },

  /**
   * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Google Sheets (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤).
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∏—Å—Ç–æ—Ä–∏–∏ —Å —Ç–∞–±–ª–∏—Ü–µ–π Google Sheets.
   *
   * @param {Object} msg - –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç Telegram Bot API
   * @returns {Promise<void>}
   */
  test_sheets: async (msg) => {
    if (!this.ADMIN_IDS.includes(msg.from.id.toString())) return;
    await this.coreFunctions.uploadHistoryToGoogleSheets();
    this.bot.sendMessage(
      msg.chat.id,
      "–ü–æ–ø—ã—Ç–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Google Sheets –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    );
  },
};
